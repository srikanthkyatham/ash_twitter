defmodule AshTwitter.Support.Comment do
  # This turns this module into a resource
  use Ash.Resource,
    data_layer: AshPostgres.DataLayer,
    extensions: [AshJsonApi.Resource]

  alias AshTwitter.Support.Tweet
  alias AshTwitter.Support

  json_api do
    type "comment"

    routes do
      base "/comments"

      get :read
      index :read
      post :create
    end
  end


  postgres do
    table "comments"
    repo AshTwitter.Repo
  end

  actions do
    # Add a set of simple actions. You'll customize these later.
    defaults [:read, :update, :destroy]

    create :create do
      primary?(true)

      argument :tweet_id, :uuid do
        allow_nil?(false)
      end

      change(set_attribute(:tweet_id, arg(:tweet_id)))
    end

  end

  # Attributes are the simple pieces of data that exist on your resource
  attributes do
    # Add an autogenerated UUID primary key called `:id`.
    uuid_primary_key :id

    # Add a string type attribute called `:subject`
    attribute :content, :string
  end

  relationships do
    belongs_to :tweet, Tweet do
      api Support
      allow_nil? false
    end
  end

end
